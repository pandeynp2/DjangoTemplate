# This is a flake8 cofiguration file that bends pep8 standard set of rules
# to enforce D&A Coding Standards.
# Options that are subject to customization per project are located at the end of file.
# It is also used to check for .ipynb in case `.flake8_notebooks` is not present

[flake8]
exclude =
    # No need to traverse our git directory
    .git,
    # There's no value in checking cache directories
    __pycache__,
    # This contains project built files
    build,
     # This contains builds of project that we don't want to check
    dist,
    # Frontend folder
    frontend,
	api,
	api_input_files,
    # Documentation folder
    docs,
    # Eggs
    .eggs

# Error codes ignored to comply with D&A Coding Standards and common sense
ignore =
    # 'f-string without any placeholders' - there are cases of splitted strings where some parts doesn't have
    # placeholders, but are formatted with f-strings to keep consistency with other f-string formatted parts
    F541,
    # 'Missing whitespace around arithmetic operator' - use it per your best judgment
    E226,
    # 'At least two spaces before inline comment' - dropped rule
    E261,
    # 'Do not assign a lambda expression, use a def' - lambdas allowed due to popularity in DS apps
    E731,
    # 'Line break before binary operator' - follow W504 and use line break before binary operator
    W503,
    # "'from module import *' only allowed at module level" - it's not allowed even at module level
    F406,
    # 'The names in your from import are in the wrong order' - too strict
    I101,
    # flake8-variable-names: We're allowing single-character variable names as those make sense in some cases
    VNE001, VNE002

# Ignore typically used variable names in naming check
ignore-names = X,Y,Z

# Import style setup for flake8-import-order
import-order-style = smarkets

# Docstrings style for flake8-docstrings
docstring-convention = google

# Has to be disabled: it conflicts with Continuous Winning
statistics = False

# YOU MOST PROBABLY WANT TO CUSTOMIZE BELOW SETUP

# Default to double quotes (can be customized: consistency within the repo is what matters)
inline-quotes = double

# Lines length - both should be the same, in range of 80-120
max-line-length = 120
max-doc-length = 120

#format=%(path)s::%(row)d,%(col)d::%(code)s::%(text)s
format=<testsuite name="%(row)d" tests="26"><testcase classname="%(col)d::%(code)s::"><error more_info="" message="">%(text)s</error>
#format=junit-xml
#output-file=flake.xml